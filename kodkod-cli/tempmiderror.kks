
// This one isn't useful, because it SHOULD satisfy the spec. Stick with miderror.



(configure :bitwidth 2 :produce-cores false :solver SAT4J :max-solutions 1 :verbosity 6)

(univ 19)

(r0 [{(16 18)(18 16)}])

(r1 [{(16)}])
(r2 [{(16) (17)(18)}])

(r3 [{(17) (18) }])

;------ This one produces sat
 (f0 (all ([v1 : r3]) (all ([v2 : (- (- r2 r1) v1)]) (! (= (# (. v1 r0 ))(# (. v2 r0 )))))))
 (f1 (&& f0 (= r3 (- r2 r1))))
 (assert f1)

;------ this one, unsat.
;------ so this is a stronger constraint, I'd like to see why and how.
 (f2 (all ([v1 : r3]) (all ([v2 : (- r3 v1)]) (! (= (# (. v1 r0 ))(# (. v2 r0 )))))))
 (assert f2)

(solve)
