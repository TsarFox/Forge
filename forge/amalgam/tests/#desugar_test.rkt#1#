#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 61 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 110 172 255 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 110 172 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 12 255 198 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 12 255 198 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 159 255 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 159 255 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 222 157 0 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 222 157 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 3464 0 31 3 16 #"#lang forge/core"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 20 3 24 #"\"../desugar/desugar.rkt\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 20 3 14 #"\"forge_ex.rkt\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 20 3 18 #"\"test_helpers.rkt\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 20 3 32 #"\"../desugar/desugar_helpers.rkt\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 20 3 32 #"\"../lift-bounds/lift-bounds.rkt\""
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 2 #" ("
0 0 14 3 9 #"prefix-in"
0 0 27 3 1 #" "
0 0 14 3 1 #"@"
0 0 27 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 16 3 7 #"require"
0 0 27 3 1 #" "
0 0 14 3 16 #"rackunit/text-ui"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 3 #"run"
0 0 27 3 1 #" "
0 0 14 3 3 #"udt"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 26 3 7 #"#:preds"
0 0 27 3 2 #" ["
0 0 14 3 16 #"isUndirectedTree"
0 0 27 3 1 #"]"
0 0 27 29 1 #"\n"
0 0 27 3 5 #"     "
0 0 26 3 7 #"#:scope"
0 0 27 3 3 #" [("
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 24 3 1 #"7"
0 0 27 3 3 #")])"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 1 #"("
0 0 14 3 9 #"run-tests"
0 0 27 3 2 #" ("
0 0 14 3 11 #"@test-suite"
0 0 27 3 1 #" "
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 20 3 16 #"\" Desugar tests\""
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 16 3 6 #"lambda"
0 0 27 3 5 #" () ("
0 0 14 3 7 #"display"
0 0 27 3 1 #" "
0 0 20 3 28 #"\"Starting tests for Desugar\""
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 16 3 6 #"lambda"
0 0 27 3 5 #" () ("
0 0 14 3 7 #"display"
0 0 27 3 1 #" "
0 0 20 3 31 #"\"All tests for Desugar passed!\""
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 19 #"; constant formulas"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 26 #"\"TEST 1 constant formulas\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"const"
0 0 27 3 2 #" ("
0 0 14 3 21 #"node/formula/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 14 3 3 #"Int"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 5 #"const"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 5 #"const"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 22 #"; multiplicity formula"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 37 #"; I think this one is working (-ABBY)"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 37 #";(define fSomeReachesAll (one edges))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 44 #";(desugarFormula fSomeReachesAll '() udt #t)"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 20 #"; quantified formula"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 4 #"; no"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 41 #"; QUESTION: THESE RETURN VERY LONG THINGS"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 13 #"#|(@test-case"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"              \"TEST NO formula currSign true\""
0 0 18 29 1 #"\n"
0 0 18 3 70
(4
 #"             (define x (node/expr/quantifier-var empty-nodeinfo 1 'x"
 #"))"
) 0 0 18 29 1 #"\n"
0 0 18 3 67
#"             (define y (node/expr/quantifier-var empty-nodeinfo 1 '"
0 0 18 3 3 #"y))"
0 0 18 29 1 #"\n"
0 0 18 3 83
(5
 #"             (define noTest (no ([x Node]) (all ([y Node]) (in y (jo"
 #"in x edges)))))"
) 0 0 18 29 1 #"\n"
0 0 18 3 101
(6
 #"             (define negatedFormula  (node/formula/op/! empty-nodein"
 #"fo (list (in y (join x edges)))))"
) 0 0 18 29 1 #"\n"
0 0 18 3 66
#"             (define newQuantFormula (node/formula/quantified empt"
0 0 18 3 57 #"y-nodeinfo 'all (list [y Node] [x Node]) negatedFormula))"
0 0 18 29 1 #"\n"
0 0 18 3 27 #"             (@check-equal?"
0 0 18 29 1 #"\n"
0 0 18 3 59
#"              (toString (desugarFormula noTest '() udt #t))"
0 0 18 29 1 #"\n"
0 0 18 3 72
(7
 #"              (toString (desugarFormula newQuantFormula '() udt #t))"
 #"))|#"
) 0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 5 #"; one"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 46 #";(define oneTest (one ([x Node]) (in x Node)))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 6 #"; lone"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 50 #"; (define loneTest (lone ([x Node])  (in x Node)))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 5 #"; AND"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 32 #"\"TEST AND formula currSign true\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"andTest"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 7 #"andTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 33 #"\"TEST AND formula currSign false\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"andTest"
0 0 27 3 2 #" ("
0 0 14 3 3 #"and"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 7 #"andTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#f"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 4 #"; OR"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 31 #"\"TEST OR formula currSign true\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"orTest"
0 0 27 3 2 #" ("
0 0 14 3 2 #"or"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 6 #"orTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 32 #"\"TEST OR formula currSign false\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"orTest"
0 0 27 3 2 #" ("
0 0 14 3 2 #"or"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 6 #"orTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#f"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 9 #"; IMPLIES"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 22 #"\"TEST implies formula\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"impliesTest"
0 0 27 3 2 #" ("
0 0 14 3 7 #"implies"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 11 #"impliesTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 18 3 32 #";desugars to (not LHS) OR (RHS) "
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 1 #" "
0 0 14 3 5 #"false"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 25 #"; IN For Not Ground LeftE"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 39 #"\"TEST In formula Node relation in univ\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"inTest"
0 0 27 3 2 #" ("
0 0 14 3 2 #"in"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"univ"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 5 #"leftE"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"rightE"
0 0 27 3 1 #" "
0 0 14 3 4 #"univ"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 17 #"liftedUpperBounds"
0 0 27 3 2 #" ("
0 0 14 3 14 #"liftBoundsExpr"
0 0 27 3 1 #" "
0 0 14 3 5 #"leftE"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"desugaredAnd"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"map"
0 0 27 3 2 #" ("
0 0 16 3 6 #"lambda"
0 0 27 3 2 #" ("
0 0 14 3 1 #"x"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 43 #"                                          ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"tupExpr"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 8 #"tup2Expr"
0 0 27 3 1 #" "
0 0 14 3 1 #"x"
0 0 27 3 1 #" "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 43 #"                                          ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"LHS"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 7 #"tupExpr"
0 0 27 3 1 #" "
0 0 14 3 5 #"leftE"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 43 #"                                          ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"RHS"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 46 #"                                             ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 7 #"tupExpr"
0 0 27 3 1 #" "
0 0 14 3 6 #"rightE"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 43 #"                                          ("
0 0 14 3 18 #"node/formula/op/=>"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 63
#"                                                              ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 3 #"LHS"
0 0 27 3 1 #" "
0 0 14 3 3 #"RHS"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 40 #"                                        "
0 0 14 3 17 #"liftedUpperBounds"
0 0 27 3 4 #"))) "
0 0 27 29 1 #"\n"
0 0 27 3 8 #"        "
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 6 #"inTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 12 #"desugaredAnd"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 8 #"; EQUALS"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 21 #"\"TEST EQUALS formula\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"equalsTest"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"LHS"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"RHS"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 15 #"desugaredEquals"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 3 #"LHS"
0 0 27 3 1 #" "
0 0 14 3 3 #"RHS"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 10 #"equalsTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 2 #"  "
0 0 14 3 15 #"desugaredEquals"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 10 #"; NEGATION"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 23 #"\"TEST NEGATION formula\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"negationTest"
0 0 27 3 2 #" ("
0 0 14 3 1 #"!"
0 0 27 3 1 #" "
0 0 14 3 4 #"true"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 12 #"negationTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 5 #"false"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 11 #"; INTEGER <"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 14 #"\"TEST error <\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstX"
0 0 27 3 2 #" ("
0 0 14 3 17 #"node/int/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstY"
0 0 27 3 3 #"  ("
0 0 14 3 17 #"node/int/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"intLess"
0 0 27 3 2 #" ("
0 0 14 3 1 #"<"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstX"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstY"
0 0 27 3 3 #" ))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 7 #"intLess"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 11 #"; INTEGER >"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 14 #"\"TEST error >\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstX"
0 0 27 3 2 #" ("
0 0 14 3 17 #"node/int/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstY"
0 0 27 3 3 #"  ("
0 0 14 3 17 #"node/int/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 10 #"intGreater"
0 0 27 3 2 #" ("
0 0 14 3 1 #">"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstX"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstY"
0 0 27 3 3 #" ))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 10 #"intGreater"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 11 #"; INTEGER ="
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 14 #"\"TEST error =\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstX"
0 0 27 3 2 #" ("
0 0 14 3 17 #"node/int/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstY"
0 0 27 3 3 #"  ("
0 0 14 3 17 #"node/int/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"intEquals"
0 0 27 3 2 #" ("
0 0 14 3 1 #"="
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstX"
0 0 27 3 1 #" "
0 0 14 3 12 #"varIntConstY"
0 0 27 3 3 #" ))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 9 #"intEquals"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 32 #"; error test desugarExpr no expr"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 24 #"\"TEST error desugarExpr\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#f"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 15 #"; relation name"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 20 #"\"TEST RELATION NAME\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"relationTest"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 12 #"relationTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#f"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"               "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                 "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                 "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 4 #"))) "
0 0 14 3 4 #"Node"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 20 #"; atom currSign true"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 28 #"\"TEST atom on currSign true\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"result"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 8 #"tup2Expr"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"               "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 6 #"result"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 21 #"; atom currSign false"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 29 #"\"TEST atom on currSign false\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"result"
0 0 27 3 2 #" ("
0 0 14 3 17 #"node/formula/op/!"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 8 #"tup2Expr"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                                "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"               "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#f"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 6 #"result"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 14 #"; Int constant"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 10 #"\"TEST Int\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"result"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 8 #"tup2Expr"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 18 #"node/expr/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 3 #"Int"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 18 #"node/expr/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 3 #"Int"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"               "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#f"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 6 #"result"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 28 #"; other expression constants"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 21 #"; quantified variable"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 35 #"; set comprehension desugar formula"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 68
(8
 #"\"TEST desugar in set comprehension case called from desugar formula"
 #"\""
) 0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 17 #"fSetComprehension"
0 0 27 3 2 #" ("
0 0 14 3 3 #"set"
0 0 27 3 3 #" (["
0 0 14 3 1 #"x"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 4 #"]) ("
0 0 14 3 2 #"in"
0 0 27 3 1 #" "
0 0 14 3 1 #"x"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 18 #"inSetComprehension"
0 0 27 3 2 #" ("
0 0 14 3 2 #"in"
0 0 27 3 2 #" ("
0 0 14 3 4 #"atom"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 2 #") "
0 0 14 3 17 #"fSetComprehension"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 17 #"liftedUpperBounds"
0 0 27 3 2 #" ("
0 0 14 3 14 #"liftBoundsExpr"
0 0 27 3 3 #"  ("
0 0 14 3 4 #"atom"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"tupExpr"
0 0 27 3 2 #" ("
0 0 14 3 8 #"tup2Expr"
0 0 27 3 2 #" ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 17 #"liftedUpperBounds"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 11 #"           "
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 18 #"inSetComprehension"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 3 #"and"
0 0 27 3 2 #" ("
0 0 14 3 2 #"in"
0 0 27 3 1 #" "
0 0 14 3 7 #"tupExpr"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 3 #") ("
0 0 14 3 2 #"in"
0 0 27 3 1 #" "
0 0 14 3 7 #"tupExpr"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 40 #"; desugarExpr test on no currTupIfAtomic"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"lambda"
0 0 27 3 4 #" () "
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 7 #"; UNION"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 23 #"\"TEST UNION expression\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"unionTest"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 14 #"desugaredChild"
0 0 27 3 2 #" ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 15 #"desugaredWithOr"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 14 #"desugaredChild"
0 0 27 3 1 #" "
0 0 14 3 14 #"desugaredChild"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 9 #"unionTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 15 #"desugaredWithOr"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 10 #"; SETMINUS"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 26 #"\"TEST SETMINUS expression\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"setMinusTest"
0 0 27 3 2 #" ("
0 0 14 3 1 #"-"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 19 #"currTupIfAtomicExpr"
0 0 27 3 2 #" ("
0 0 14 3 8 #"tup2Expr"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 4 #"args"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"LHSSetMinus"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 54 #"                                                     ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 19 #"currTupIfAtomicExpr"
0 0 27 29 1 #"\n"
0 0 27 3 60
#"                                                           ("
0 0 14 3 5 #"first"
0 0 27 3 1 #" "
0 0 14 3 4 #"args"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"RHSSetMinus"
0 0 27 3 2 #" ("
0 0 14 3 17 #"node/formula/op/!"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 53 #"                                                    ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 59
#"                                                          ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 19 #"currTupIfAtomicExpr"
0 0 27 3 2 #" ("
0 0 14 3 6 #"second"
0 0 27 3 1 #" "
0 0 14 3 4 #"args"
0 0 27 3 6 #"))))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 17 #"desugaredSetMinus"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 11 #"LHSSetMinus"
0 0 27 3 1 #" "
0 0 14 3 11 #"RHSSetMinus"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 12 #"setMinusTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 17 #"desugaredSetMinus"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 14 #"; INTERSECTION"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 30 #"\"Test INTERSECTION expression\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 16 #"intersectionTest"
0 0 27 3 2 #" ("
0 0 14 3 1 #"&"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 16 #"intersectionTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 35 #"                                  ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 56 #"                                                       ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 57 #"                                                        ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 57 #"                                                         "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 29 1 #"\n"
0 0 27 3 58
#"                                                         ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 57 #"                                                        ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 56 #"                                                       ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 57 #"                                                        ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 57 #"                                                         "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 29 1 #"\n"
0 0 27 3 58
#"                                                         ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 57 #"                                                        ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 7 #")))))))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 27 29 1 #"\n"
0 0 27 3 25 #"                         "
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 9 #"; PRODUCT"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 36 #"\"TEST PRODUCT expression on arity 2\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"productTest"
0 0 27 3 2 #" ("
0 0 14 3 2 #"->"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"sol"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"                "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                       "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                       ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 4 #"))) "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                       "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                       ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 4 #"Node"
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 11 #"productTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 3 #"sol"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 36 #"\"TEST PRODUCT expression on arity 3\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"productTest"
0 0 27 3 2 #" ("
0 0 14 3 2 #"->"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 3 #"sol"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"                "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                       "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                       ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 4 #"))) "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                       "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 24 #"                       ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 29 1 #"\n"
0 0 27 3 32 #"                               ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                              "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"3"
0 0 27 29 1 #"\n"
0 0 27 3 31 #"                              ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 34 #"                             )))))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 11 #"productTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 3 #"sol"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 20 #"; TRANSITIVE CLOSURE"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 25 #"#|(define fSomeReachesAll"
0 0 18 29 1 #"\n"
0 0 18 3 63
#"  (some ([x Node]) (all ([y Node]) (in y (join x (^ edges))))))"
0 0 18 29 1 #"\n"
0 0 18 3 45 #"(desugarFormula fSomeReachesAll '() udt #t)|#"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 6 #"; JOIN"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 30 #"\"TEST JOIN multiple arguments\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 8 #"joinTest"
0 0 27 3 2 #" ("
0 0 14 3 4 #"join"
0 0 27 3 1 #" "
0 0 14 3 4 #"iden"
0 0 27 3 1 #" "
0 0 14 3 4 #"iden"
0 0 27 3 1 #" "
0 0 14 3 4 #"iden"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 8 #"joinTest"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 14 3 5 #"Node0"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 5 #"())))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 49 #"\"TEST JOIN on OR with currSign False 2 arguments\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 18 #"joinFormulaORFalse"
0 0 27 3 2 #" ("
0 0 14 3 2 #"in"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 4 #"join"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 5 #"edges"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 13 #"@check-equal?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 14 #"desugarFormula"
0 0 27 3 1 #" "
0 0 14 3 18 #"joinFormulaORFalse"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#f"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 14 3 18 #"node/formula/op/&&"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"               "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                      "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"edges\""
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                      "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node1"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node1"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"edges\""
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                      "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node2"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node2"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"edges\""
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                      "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node3"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node3"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"edges\""
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                      "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node4"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node4"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"edges\""
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                      "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node5"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node5"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"edges\""
0 0 27 3 5 #")))))"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                     ("
0 0 14 3 18 #"node/formula/op/||"
0 0 27 29 1 #"\n"
0 0 27 3 22 #"                      "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node6"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"univ"
0 0 27 3 1 #" "
0 0 20 3 6 #"\"Node\""
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                            ("
0 0 14 3 18 #"node/formula/op/in"
0 0 27 29 1 #"\n"
0 0 27 3 29 #"                             "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 15 #"node/expr/op/->"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                    "
0 0 24 3 1 #"2"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 2 #" ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node6"
0 0 27 3 1 #")"
0 0 27 29 1 #"\n"
0 0 27 3 45 #"                                            ("
0 0 14 3 14 #"node/expr/atom"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 14 3 5 #"Node0"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 36 #"                                   ("
0 0 14 3 3 #"rel"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 24 3 1 #"'"
0 0 14 3 4 #"Node"
0 0 27 3 1 #" "
0 0 20 3 7 #"\"edges\""
0 0 27 3 9 #")))))))))"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 30 #"; REFLEXIVE-TRANSITIVE CLOSURE"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 11 #"; TRANSPOSE"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 11 #"; SINGLETON"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 22 #"\"TEST singleton error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 11 #"singletonEx"
0 0 27 3 2 #" ("
0 0 14 3 17 #"node/expr/op/sing"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 2 #" ("
0 0 14 3 4 #"list"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 11 #"desugarExpr"
0 0 27 3 1 #" "
0 0 14 3 11 #"singletonEx"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 24 3 1 #"'"
0 0 27 3 1 #"("
0 0 14 3 4 #"Node"
0 0 27 3 2 #") "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 14 #"; CONSTANT INT"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 26 #"\"TEST intConstant failure\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 12 #"intConstFail"
0 0 27 3 2 #" ("
0 0 14 3 17 #"node/int/constant"
0 0 27 3 1 #" "
0 0 14 3 14 #"empty-nodeinfo"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 12 #"intConstFail"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 5 #"; sum"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 16 #"\"TEST sum error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"intSum"
0 0 27 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 27 3 1 #" "
0 0 14 3 5 #"edges"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 6 #"intSum"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 14 #"; desugarIntOp"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 14 #"; int addition"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 21 #"\"TEST addition error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"intAdd"
0 0 27 3 2 #" ("
0 0 14 3 1 #"+"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 6 #"intAdd"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 17 #"; int subtraction"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 16 #"\"TEST sub error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"intSub"
0 0 27 3 2 #" ("
0 0 14 3 1 #"-"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 6 #"intSub"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 14 #"; int division"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 16 #"\"TEST div error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"intDiv"
0 0 27 3 2 #" ("
0 0 14 3 1 #"/"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 6 #"intDiv"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 10 #"; int mult"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 17 #"\"TEST mult error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"intMult"
0 0 27 3 2 #" ("
0 0 14 3 1 #"*"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 1 #" "
0 0 24 3 1 #"2"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 7 #"intMult"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 9 #"; int sum"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 16 #"\"TEST sum error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"intSumErr"
0 0 27 3 2 #" ("
0 0 14 3 3 #"sum"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 9 #"intSumErr"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 10 #"; int card"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 17 #"\"TEST card error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 7 #"intCard"
0 0 27 3 2 #" ("
0 0 14 3 4 #"card"
0 0 27 3 1 #" "
0 0 14 3 4 #"Node"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 7 #"intCard"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 9 #"; int mod"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 16 #"\"TEST mod error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"intMod"
0 0 27 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 27 3 1 #" "
0 0 24 3 1 #"0"
0 0 27 3 1 #" "
0 0 24 3 1 #"5"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 6 #"intMod"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 4 #"))))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 9 #"; int abs"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 25 #"; TODO: finish this case "
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 6 #"intAbs"
0 0 27 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 16 #"               ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 6 #"intAbs"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 3 #")))"
0 0 27 29 1 #"\n"
0 0 27 29 1 #"\n"
0 0 27 3 12 #"            "
0 0 18 3 13 #"; int sign-of"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"            ("
0 0 14 3 10 #"@test-case"
0 0 27 29 1 #"\n"
0 0 27 3 13 #"             "
0 0 20 3 19 #"\"TEST signOf error\""
0 0 27 29 1 #"\n"
0 0 27 3 14 #"             ("
0 0 14 3 10 #"@check-exn"
0 0 27 29 1 #"\n"
0 0 27 3 14 #"              "
0 0 14 3 9 #"exn:fail?"
0 0 27 29 1 #"\n"
0 0 27 3 15 #"              ("
0 0 16 3 6 #"lambda"
0 0 27 3 3 #" ()"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 16 3 6 #"define"
0 0 27 3 1 #" "
0 0 14 3 9 #"intSignOf"
0 0 27 3 2 #" ("
0 0 14 3 3 #"sgn"
0 0 27 3 1 #" "
0 0 24 3 1 #"1"
0 0 27 3 2 #"))"
0 0 27 29 1 #"\n"
0 0 27 3 17 #"                ("
0 0 14 3 10 #"desugarInt"
0 0 27 3 1 #" "
0 0 14 3 9 #"intSignOf"
0 0 27 3 1 #" "
0 0 24 3 1 #"'"
0 0 27 3 3 #"() "
0 0 14 3 3 #"udt"
0 0 27 3 1 #" "
0 0 24 3 2 #"#t"
0 0 27 3 6 #"))))))"
0           0
